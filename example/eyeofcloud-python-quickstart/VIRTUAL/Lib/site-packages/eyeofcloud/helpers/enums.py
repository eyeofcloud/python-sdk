_A='feature-test'
import os,logging
class CommonAudienceEvaluationLogs:AUDIENCE_EVALUATION_RESULT='Audience "{}" evaluated to {}.';EVALUATING_AUDIENCE='Starting to evaluate audience "{}" with conditions: {}.';INFINITE_ATTRIBUTE_VALUE='Audience condition "{}" evaluated to UNKNOWN because the number value for user attribute "{}" is not in the range [-2^53, +2^53].';MISSING_ATTRIBUTE_VALUE='Audience condition {} evaluated to UNKNOWN because no value was passed for user attribute "{}".';NULL_ATTRIBUTE_VALUE='Audience condition "{}" evaluated to UNKNOWN because a null value was passed for user attribute "{}".';UNEXPECTED_TYPE='Audience condition "{}" evaluated to UNKNOWN because a value of type "{}" was passed for user attribute "{}".';UNKNOWN_CONDITION_TYPE='Audience condition "{}" uses an unknown condition type. You may need to upgrade to a newer release of the Eyeofcloud SDK.';UNKNOWN_CONDITION_VALUE='Audience condition "{}" has an unsupported condition value. You may need to upgrade to a newer release of the Eyeofcloud SDK.';UNKNOWN_MATCH_TYPE='Audience condition "{}" uses an unknown match type. You may need to upgrade to a newer release of the Eyeofcloud SDK.'
class ExperimentAudienceEvaluationLogs(CommonAudienceEvaluationLogs):AUDIENCE_EVALUATION_RESULT_COMBINED='Audiences for experiment "{}" collectively evaluated to {}.';EVALUATING_AUDIENCES_COMBINED='Evaluating audiences for experiment "{}": {}.'
class RolloutRuleAudienceEvaluationLogs(CommonAudienceEvaluationLogs):AUDIENCE_EVALUATION_RESULT_COMBINED='Audiences for rule {} collectively evaluated to {}.';EVALUATING_AUDIENCES_COMBINED='Evaluating audiences for rule {}: {}.'
class ConfigManager:AUTHENTICATED_DATAFILE_URL_TEMPLATE='https://config.eyeofcloud.com/datafiles/auth/{sdk_key}.json';AUTHORIZATION_HEADER_DATA_TEMPLATE='Bearer {datafile_access_token}';DATAFILE_URL_TEMPLATE=os.environ.get('EYEOFCLOUD_DATAFILE_URL','https://cdn.eyeofcloud.com/datafiles/')+'{sdk_key}.json';DEFAULT_BLOCKING_TIMEOUT=10;DEFAULT_UPDATE_INTERVAL=300;REQUEST_TIMEOUT=10
class ControlAttributes:BOT_FILTERING='$opt_bot_filtering';BUCKETING_ID='$opt_bucketing_id';USER_AGENT='$opt_user_agent'
class DatafileVersions:V2='2';V3='3';V4='4'
class DecisionNotificationTypes:AB_TEST='ab-test';ALL_FEATURE_VARIABLES='all-feature-variables';FEATURE='feature';FEATURE_TEST=_A;FEATURE_VARIABLE='feature-variable';FLAG='flag'
class DecisionSources:EXPERIMENT='experiment';FEATURE_TEST=_A;ROLLOUT='rollout'
class Errors:INVALID_ATTRIBUTE='Provided attribute is not in datafile.';INVALID_ATTRIBUTE_FORMAT='Attributes provided are in an invalid format.';INVALID_AUDIENCE='Provided audience is not in datafile.';INVALID_EVENT_TAG_FORMAT='Event tags provided are in an invalid format.';INVALID_EXPERIMENT_KEY='Provided experiment is not in datafile.';INVALID_EVENT_KEY='Provided event is not in datafile.';INVALID_FEATURE_KEY='Provided feature key is not in the datafile.';INVALID_GROUP_ID='Provided group is not in datafile.';INVALID_INPUT='Provided "{}" is in an invalid format.';INVALID_OPTIMIZELY='Eyeofcloud instance is not valid. Failing "{}".';INVALID_PROJECT_CONFIG='Invalid config. Eyeofcloud instance is not valid. Failing "{}".';INVALID_VARIATION='Provided variation is not in datafile.';INVALID_VARIABLE_KEY='Provided variable key is not in the feature flag.';NONE_FEATURE_KEY_PARAMETER='"None" is an invalid value for feature key.';NONE_USER_ID_PARAMETER='"None" is an invalid value for user ID.';NONE_VARIABLE_KEY_PARAMETER='"None" is an invalid value for variable key.';UNSUPPORTED_DATAFILE_VERSION='This version of the Python SDK does not support the given datafile version: "{}".'
class ForcedDecisionLogs:USER_HAS_FORCED_DECISION_WITH_RULE_SPECIFIED='Variation ({}) is mapped to flag ({}), rule ({}) and user ({}) in the forced decision map.';USER_HAS_FORCED_DECISION_WITHOUT_RULE_SPECIFIED='Variation ({}) is mapped to flag ({}) and user ({}) in the forced decision map.';USER_HAS_FORCED_DECISION_WITH_RULE_SPECIFIED_BUT_INVALID='Invalid variation is mapped to flag ({}), rule ({}) and user ({}) in the forced decision map.';USER_HAS_FORCED_DECISION_WITHOUT_RULE_SPECIFIED_BUT_INVALID='Invalid variation is mapped to flag ({}) and user ({}) in the forced decision map.'
class HTTPHeaders:AUTHORIZATION='Authorization';IF_MODIFIED_SINCE='If-Modified-Since';LAST_MODIFIED='Last-Modified'
class HTTPVerbs:GET='GET';POST='POST'
class LogLevels:NOTSET=logging.NOTSET;DEBUG=logging.DEBUG;INFO=logging.INFO;WARNING=logging.WARNING;ERROR=logging.ERROR;CRITICAL=logging.CRITICAL
class NotificationTypes:' NotificationTypes for the notification_center.NotificationCenter\n      format is NOTIFICATION TYPE: list of parameters to callback.\n\n      ACTIVATE (DEPRECATED since 3.1.0) notification listener has the following parameters:\n      Experiment experiment, str user_id, dict attributes (can be None), Variation variation, Event event\n\n      DECISION notification listener has the following parameters:\n      DecisionNotificationTypes type, str user_id, dict attributes, dict decision_info\n\n      OPTIMIZELY_CONFIG_UPDATE notification listener has no associated parameters.\n\n      TRACK notification listener has the following parameters:\n      str event_key, str user_id, dict attributes (can be None), event_tags (can be None), Event event\n\n      LOG_EVENT notification listener has the following parameter(s):\n      LogEvent log_event\n  ';ACTIVATE='ACTIVATE:experiment, user_id, attributes, variation, event';DECISION='DECISION:type, user_id, attributes, decision_info';OPTIMIZELY_CONFIG_UPDATE='OPTIMIZELY_CONFIG_UPDATE';TRACK='TRACK:event_key, user_id, attributes, event_tags, event';LOG_EVENT='LOG_EVENT:log_event'
class VersionType:IS_PRE_RELEASE='-';IS_BUILD='+'